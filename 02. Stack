#include <iostream>
#define MAX_SIZE 100 // ukuran maksimal stack

using namespace std;

class Stack {
    private:
        int top; // indeks elemen teratas pada stack
        int arr[MAX_SIZE]; // array untuk menampung elemen-elemen pada stack
    public:
        Stack() { // konstruktor
            top = -1;
        }
        
        bool isFull() { // fungsi untuk memeriksa apakah stack penuh
            return top == MAX_SIZE - 1;
        }
        
        bool isEmpty() { // fungsi untuk memeriksa apakah stack kosong
            return top == -1;
        }
        
        void push(int value) { // fungsi untuk menambahkan elemen ke dalam stack
            if (isFull()) {
                cout << "Stack overflow!" << endl;
            }
            else {
                top++;
                arr[top] = value;
                cout << "Pushed " << value << " into the stack." << endl;
            }
        }
        
        void pop() { // fungsi untuk menghapus elemen dari stack
            if (isEmpty()) {
                cout << "Stack underflow!" << endl;
            }
            else {
                cout << "Popped " << arr[top] << " from the stack." << endl;
                top--;
            }
        }
        
        void display() {
            if (isEmpty()) {
                cout << "Stack is empty!" << endl;
            }
            else {
                cout << "Elements in the stack are: ";
                for (int i = 0; i <= top; i++) {
                    cout << arr[i] << " ";
                }
                cout << endl;
            }
        }
};

int main() {
    Stack s;
    s.push(100);
    s.push(90);
    s.push(80);
    s.push(70);
    s.push(60);
    s.pop();
    s.display();
    
    return 0;
}
